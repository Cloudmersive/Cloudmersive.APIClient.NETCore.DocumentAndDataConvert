/* 
 * convertapi
 *
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloudmersive.APIClient.NETCore.DocumentAndDataConvert.Api;
using Cloudmersive.APIClient.NETCore.DocumentAndDataConvert.Model;
using Cloudmersive.APIClient.NETCore.DocumentAndDataConvert.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloudmersive.APIClient.NETCore.DocumentAndDataConvert.Test
{
    /// <summary>
    ///  Class for testing DocxTable
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DocxTableTests
    {
        // TODO uncomment below to declare an instance variable for DocxTable
        //private DocxTable instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DocxTable
            //instance = new DocxTable();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DocxTable
        /// </summary>
        [Test]
        public void DocxTableInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DocxTable
            //Assert.IsInstanceOfType<DocxTable> (instance, "variable 'instance' is a DocxTable");
        }


        /// <summary>
        /// Test the property 'TableID'
        /// </summary>
        [Test]
        public void TableIDTest()
        {
            // TODO unit test for the property 'TableID'
        }
        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Test]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }
        /// <summary>
        /// Test the property 'WidthType'
        /// </summary>
        [Test]
        public void WidthTypeTest()
        {
            // TODO unit test for the property 'WidthType'
        }
        /// <summary>
        /// Test the property 'TableRows'
        /// </summary>
        [Test]
        public void TableRowsTest()
        {
            // TODO unit test for the property 'TableRows'
        }
        /// <summary>
        /// Test the property 'TopBorderType'
        /// </summary>
        [Test]
        public void TopBorderTypeTest()
        {
            // TODO unit test for the property 'TopBorderType'
        }
        /// <summary>
        /// Test the property 'TopBorderSize'
        /// </summary>
        [Test]
        public void TopBorderSizeTest()
        {
            // TODO unit test for the property 'TopBorderSize'
        }
        /// <summary>
        /// Test the property 'TopBorderSpace'
        /// </summary>
        [Test]
        public void TopBorderSpaceTest()
        {
            // TODO unit test for the property 'TopBorderSpace'
        }
        /// <summary>
        /// Test the property 'TopBorderColor'
        /// </summary>
        [Test]
        public void TopBorderColorTest()
        {
            // TODO unit test for the property 'TopBorderColor'
        }
        /// <summary>
        /// Test the property 'BottomBorderType'
        /// </summary>
        [Test]
        public void BottomBorderTypeTest()
        {
            // TODO unit test for the property 'BottomBorderType'
        }
        /// <summary>
        /// Test the property 'BottomBorderSize'
        /// </summary>
        [Test]
        public void BottomBorderSizeTest()
        {
            // TODO unit test for the property 'BottomBorderSize'
        }
        /// <summary>
        /// Test the property 'BottomBorderSpace'
        /// </summary>
        [Test]
        public void BottomBorderSpaceTest()
        {
            // TODO unit test for the property 'BottomBorderSpace'
        }
        /// <summary>
        /// Test the property 'BottomBorderColor'
        /// </summary>
        [Test]
        public void BottomBorderColorTest()
        {
            // TODO unit test for the property 'BottomBorderColor'
        }
        /// <summary>
        /// Test the property 'LeftBorderType'
        /// </summary>
        [Test]
        public void LeftBorderTypeTest()
        {
            // TODO unit test for the property 'LeftBorderType'
        }
        /// <summary>
        /// Test the property 'LeftBorderSize'
        /// </summary>
        [Test]
        public void LeftBorderSizeTest()
        {
            // TODO unit test for the property 'LeftBorderSize'
        }
        /// <summary>
        /// Test the property 'LeftBorderSpace'
        /// </summary>
        [Test]
        public void LeftBorderSpaceTest()
        {
            // TODO unit test for the property 'LeftBorderSpace'
        }
        /// <summary>
        /// Test the property 'LeftBorderColor'
        /// </summary>
        [Test]
        public void LeftBorderColorTest()
        {
            // TODO unit test for the property 'LeftBorderColor'
        }
        /// <summary>
        /// Test the property 'RightBorderType'
        /// </summary>
        [Test]
        public void RightBorderTypeTest()
        {
            // TODO unit test for the property 'RightBorderType'
        }
        /// <summary>
        /// Test the property 'RightBorderSize'
        /// </summary>
        [Test]
        public void RightBorderSizeTest()
        {
            // TODO unit test for the property 'RightBorderSize'
        }
        /// <summary>
        /// Test the property 'RightBorderSpace'
        /// </summary>
        [Test]
        public void RightBorderSpaceTest()
        {
            // TODO unit test for the property 'RightBorderSpace'
        }
        /// <summary>
        /// Test the property 'RightBorderColor'
        /// </summary>
        [Test]
        public void RightBorderColorTest()
        {
            // TODO unit test for the property 'RightBorderColor'
        }
        /// <summary>
        /// Test the property 'CellHorizontalBorderType'
        /// </summary>
        [Test]
        public void CellHorizontalBorderTypeTest()
        {
            // TODO unit test for the property 'CellHorizontalBorderType'
        }
        /// <summary>
        /// Test the property 'CellHorizontalBorderSize'
        /// </summary>
        [Test]
        public void CellHorizontalBorderSizeTest()
        {
            // TODO unit test for the property 'CellHorizontalBorderSize'
        }
        /// <summary>
        /// Test the property 'CellHorizontalBorderSpace'
        /// </summary>
        [Test]
        public void CellHorizontalBorderSpaceTest()
        {
            // TODO unit test for the property 'CellHorizontalBorderSpace'
        }
        /// <summary>
        /// Test the property 'CellHorizontalBorderColor'
        /// </summary>
        [Test]
        public void CellHorizontalBorderColorTest()
        {
            // TODO unit test for the property 'CellHorizontalBorderColor'
        }
        /// <summary>
        /// Test the property 'CellVerticalBorderType'
        /// </summary>
        [Test]
        public void CellVerticalBorderTypeTest()
        {
            // TODO unit test for the property 'CellVerticalBorderType'
        }
        /// <summary>
        /// Test the property 'CellVerticalBorderSize'
        /// </summary>
        [Test]
        public void CellVerticalBorderSizeTest()
        {
            // TODO unit test for the property 'CellVerticalBorderSize'
        }
        /// <summary>
        /// Test the property 'CellVerticalBorderSpace'
        /// </summary>
        [Test]
        public void CellVerticalBorderSpaceTest()
        {
            // TODO unit test for the property 'CellVerticalBorderSpace'
        }
        /// <summary>
        /// Test the property 'CellVerticalBorderColor'
        /// </summary>
        [Test]
        public void CellVerticalBorderColorTest()
        {
            // TODO unit test for the property 'CellVerticalBorderColor'
        }
        /// <summary>
        /// Test the property 'StartBorderType'
        /// </summary>
        [Test]
        public void StartBorderTypeTest()
        {
            // TODO unit test for the property 'StartBorderType'
        }
        /// <summary>
        /// Test the property 'StartBorderSize'
        /// </summary>
        [Test]
        public void StartBorderSizeTest()
        {
            // TODO unit test for the property 'StartBorderSize'
        }
        /// <summary>
        /// Test the property 'StartBorderSpace'
        /// </summary>
        [Test]
        public void StartBorderSpaceTest()
        {
            // TODO unit test for the property 'StartBorderSpace'
        }
        /// <summary>
        /// Test the property 'StartBorderColor'
        /// </summary>
        [Test]
        public void StartBorderColorTest()
        {
            // TODO unit test for the property 'StartBorderColor'
        }
        /// <summary>
        /// Test the property 'EndBorderType'
        /// </summary>
        [Test]
        public void EndBorderTypeTest()
        {
            // TODO unit test for the property 'EndBorderType'
        }
        /// <summary>
        /// Test the property 'EndBorderSize'
        /// </summary>
        [Test]
        public void EndBorderSizeTest()
        {
            // TODO unit test for the property 'EndBorderSize'
        }
        /// <summary>
        /// Test the property 'EndBorderSpace'
        /// </summary>
        [Test]
        public void EndBorderSpaceTest()
        {
            // TODO unit test for the property 'EndBorderSpace'
        }
        /// <summary>
        /// Test the property 'EndBorderColor'
        /// </summary>
        [Test]
        public void EndBorderColorTest()
        {
            // TODO unit test for the property 'EndBorderColor'
        }
        /// <summary>
        /// Test the property 'TableIndentationMode'
        /// </summary>
        [Test]
        public void TableIndentationModeTest()
        {
            // TODO unit test for the property 'TableIndentationMode'
        }
        /// <summary>
        /// Test the property 'TableIndentationWidth'
        /// </summary>
        [Test]
        public void TableIndentationWidthTest()
        {
            // TODO unit test for the property 'TableIndentationWidth'
        }

    }

}
